version: "3.8"

services:
  ui:
    build:
      context: ./TodoUi
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api

  api:
    build:
      context: ./TodoApi
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=TodoAppDb;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
    ports:
      - "8080:8080"
      # - "8081:8081"
    depends_on:
      db-migration:
        condition: service_completed_successfully

  db-migration:
    build:
      context: ./TodoApi
      dockerfile: Dockerfile.Migration
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=TodoAppDb;User=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
    depends_on:
      sqlserver:
        condition: service_healthy

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

volumes:
  sqlserver-data:
    driver: local
